name: .NET Windows Release

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'
      - 'v[0-9]+.[0-9]+.[0-9]+-*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., 1.2.3 or v1.2.3)'
        required: true

jobs:
  build-and-release:
    runs-on: windows-latest
    permissions:
      contents: write

    steps:
    - uses: actions/checkout@v5
      with:
        fetch-depth: 0

    - name: Get Version
      run: |
        if [ -n "${{ github.event.inputs.version }}" ]; then
          VERSION=$(echo "${{ github.event.inputs.version }}" | sed 's/^v//')
          echo "VERSION=$VERSION" >> $GITHUB_ENV
        else
          echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV
        fi
      shell: bash

    - name: Update AssemblyInfo
      run: |
        $ver = "${{ env.VERSION }}".Trim()
        $num = [regex]::Match($ver, '^\s*(\d+(?:\.\d+){0,3})').Groups[1].Value
        if (-not $num) {
            $assemblyVer = '0.0.0.1'
        } else {
            $parts = $num.Split('.')
            while ($parts.Count -lt 4) { $parts += '0' }
            $parts[3] = if ($ver -match '-') { '1' } else { $parts[3] }
            $assemblyVer = $parts -join '.'
        }

        $content = Get-Content Properties\AssemblyInfo.cs | ForEach-Object {
            $_ -replace '\[assembly: AssemblyVersion\(".*?"\)\]', "[assembly: AssemblyVersion(`"$assemblyVer`")]"
        } 

        $content = $content | ForEach-Object {
            $_ -replace '\[assembly: AssemblyFileVersion\(".*?"\)\]', "[assembly: AssemblyFileVersion(`"$assemblyVer`")]"
        }

        Set-Content Properties\AssemblyInfo.cs $content
      shell: pwsh

    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v1.3

    - name: Build and publish
      run: |
        $platforms = "x64", "x86", "AnyCPU"
        foreach ($platform in $platforms) {
          msbuild WinProxyEnvSync.csproj /p:Configuration=Release /p:Platform=$platform /p:DeployOnBuild=true /p:PublishProfile=Properties\PublishProfiles\FolderProfile.pubxml
        }
      shell: pwsh

    - name: Package Release
      shell: pwsh
      run: |
        $artifactsPath = "artifacts"

        New-Item -ItemType Directory -Force -Path $artifactsPath

        $platforms = @{
          "x64"    = "bin\x64\Release"
          "x86"    = "bin\x86\Release"
          "anycpu" = "bin\Release"
        }

        foreach ($platformName in $platforms.Keys) {
          $releasePath = $platforms[$platformName]
          $zipPath = "$artifactsPath\WinProxyEnvSync-windows-$platformName-${{ env.VERSION }}.zip"
          Copy-Item -Path "README.md", "LICENSE" -Destination $releasePath
          Compress-Archive -Path "$releasePath\*" -DestinationPath $zipPath
        }

    - name: Release
      uses: softprops/action-gh-release@v2
      with:
        files: artifacts/*